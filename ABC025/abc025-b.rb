# https://atcoder.jp/contests/abc025/tasks/abc025_b
# 直大くんと直子さんは双子の兄妹です。今日は家の廊下でスイカ割りの練習をすることになりました。
# 廊下は東西方向に無限に長く、途中の 1 箇所に直大くんの部屋の入り口があります。最初、直大くんの部屋の前に直大くんと直子さんがいます。
# スイカ割りの練習では、以下の N 回の移動を順に実行します。
# i 番目の移動 : 最初に直子さんが方角とメートル単位の距離 di​を指定します。指定する方角は東か西で、di​ は正整数です。
# その後、直大くんが指定された方向を向いて、距離 di​ を目標に移動します。
#
# 直大くんは 1 回の移動において A メートルよりも少ない距離を移動することと、B メートルよりも多い距離を移動することが苦手です。
# そのため、目標移動距離が di​ メートルだったときの最終移動距離は以下のようになります。
# di​＜A のとき、直大くんは向いている方向に A メートル進む。
# A≦di​≦B のとき、直大くんは向いている方向に di​ メートル進む。
# di​＞B のとき、直大くんは向いている方向に B メートル進む。
# あなたの課題は、直大くんが N 回の移動を終えたときにどこにいるのかを求めることです。

# 入力
# 入力は以下の形式で標準入力から与えられる。
# N A B
# s1​ d1​
# s2​ d2​
# :
# sN​ dN​

# 1 行目には、3 つの整数 N(1≦N≦100) と A と B(1≦A≦B≦100) が空白区切りで書かれている。
# 2 行目からの N 行には、移動の情報が書かれている。N 行のうちの i(1≦i≦N) 行目には、文字列 si​ と整数 di​(1≦di​≦100) が空白区切りで書かれている。
# 文字列 si​ は East または West であり、直子さんが指定する方角がそれぞれ東、西であることを表す。

# 出力
# 直大くんの最終的な位置が直大くんの部屋の前よりも X(1≦X) メートル東になったとき、文字列 East と X をこの順に空白区切りで 1 行に出力せよ。
# 直大くんの最終的な位置が直大くんの部屋の前よりも X(1≦X) メートル西になったとき、文字列 West と X をこの順に空白区切りで 1 行に出力せよ。
# 直大くんの最終的な位置が直大くんの部屋の前と同じ場所になったとき、整数 0 を
# 1 行に出力せよ。
# いずれの場合においても、出力の末尾に改行を入れること。

def move(distance, a, b)
  return a if distance < a
  return distance if distance < b

  b
end

n, a, b = gets.chomp.split(' ').map(&:to_i)
position = 0

n.times do
  s, d = gets.chomp.split(' ')
  d = d.to_i
  if s == 'East'
    position += move(d, a, b)
  else
    position -= move(d, a, b)
  end
end

prefix = ''
if position > 0
  prefix = 'East '
elsif position < 0
  prefix = 'West '
end

puts "#{prefix}#{position.abs}"
