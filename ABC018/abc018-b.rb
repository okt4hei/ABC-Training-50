# https://atcoder.jp/contests/abc018/tasks/abc018_2
# 半角の小文字アルファベットのみからなる文字列 S が与えられる。 文字列 S に対して以下の操作 1 から操作 N までを番号の昇順に行う。
#   操作 i : 左から li​ 番目の文字を左端、左から ri​(1≦li​＜ri​≦∣S∣) 番目の文字を右端とした部分文字列を逆順にする。
# 例えば，文字列 abcdef に対して、左から 3 番目の文字 c を左端、左から 5 番目の文字 e を右端とした部分文字列を逆順にすると、文字列 abedcf が得られる。
# 操作 1 から操作 N までを番号の昇順に行った後の文字列を出力せよ。

# 入力
# 入力は以下の形式で標準入力から与えられる。
# S
# N
# l1​ r1​
# l2​ r2​
# :
# lN​ rN​

# 1 行目には、半角の小文字アルファベットのみからなる文字列 S(1≦∣S∣≦100) が与えられる。
# 2 行目には、操作の回数を表す整数 N(1≦N≦100) が与えられる。
# 3 行目から N 行では、操作に関する情報が与えられる。
# N 行のうち i 行目では、2 つの整数 li​ と ri​(1≦li​＜ri​≦∣S∣) が空白区切りで与えられる。これは、操作 i が左から li​ 番目の文字を左端、左から ri​ 番目の文字を右端とした部分文字列を逆順にする操作であることを表す。

# 出力
# 全操作後の文字列を 1 行に出力せよ。(21:49 表現の変更)出力の末尾に改行を入れること。

s = gets.chomp
n = gets.chomp.to_i

n.times do
  l, r = gets.chomp.split(' ').map(&:to_i)
  l -= 1
  r -= 1
  s = s[...l] + s[l..r].reverse + s[r + 1..]
end

puts s
